<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd ">
    
    <!-- Hibernate template -->
    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/mdocDB"/>
        <property name="username" value="root"/>
        <property name="password" value=""/>
    </bean>
    
    <bean id="mySessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="mappingResources">
            <list>
              <value>domain/Contact.hbm.xml</value>
              <value>domain/PhoneNumber.hbm.xml</value>
              <value>domain/ContactGroup.hbm.xml</value>
              <value>domain/Address.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>              
                 <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                 <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                 <prop key="hibernate.cache.use_second_level_cache">true</prop>
                 <prop key="hibernate.hbm2ddl.auto">create</prop>   <!-- update --> 
                 <prop key="hibernate.show_sql">true</prop> <!--  -->
            </props>
        </property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
       <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>
    
    <!-- DAO beans -->
    <bean id="beanDAOContact" class="domain.DAOContact" scope="singleton">
        <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>
    <bean id="beanDAOContactGroup" class="domain.DAOContactGroup" scope="singleton">
        <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>    
    
    <!-- Resources beans -->
    <bean id="beanContact" class="domain.Contact" scope="prototype">
    </bean>
    <bean id="beanEntreprise" class="domain.Entreprise" scope="prototype">
    </bean>    
    <bean id="beanAddress" class="domain.Address" scope="prototype">
    </bean>
    <bean id="beanContactGroup" class="domain.ContactGroup" scope="prototype">
    </bean>
    <bean id="beanPhoneNumber" class="domain.PhoneNumber" scope="prototype">
    </bean>
    
    <bean id="beanAddressJussieu" class="domain.Address" scope="prototype">
        <property name="street" value="4 place jussieu" />
        <property name="city" value="Paris" />
        <property name="zip" value="75006" />
        <property name="country" value="France" />
    </bean>
    <bean id="beanAddressParis" class="domain.Address" scope="prototype">
        <property name="street" value="4 place jussieu" />
        <property name="city" value="Paris" />
        <property name="zip" value="75006" />
        <property name="country" value="France" />
    </bean>
    <bean id="phone1" class="domain.PhoneNumber" scope="prototype">
        <property name="phoneKind" value="homephone" />
        <property name="phoneNumber" value="0123456" />
        <!-- <property name="contact"><ref bean="person2" /></property> -->
    </bean>
    <bean id="phone2" class="domain.PhoneNumber" scope="prototype">
        <property name="phoneKind" value="cellphone" />
        <property name="phoneNumber" value="0987654" />
        <!-- <property name="contact"><ref bean="person2" /></property> -->
    </bean>
    <bean id="group1" class="domain.ContactGroup" scope="prototype">
        <property name="groupName" value="ami" />
        <!-- <property name="contacts">
            <list>
                <ref bean="person2" />
            </list>
        </property> -->
    </bean>
    <bean id="person1" class="domain.Contact" scope="prototype">
        <property name="firstname" value="David" />
        <property name="lastname" value="Lecoconnier" />
        <property name="email" value="david.lecoconnier@gmail.com" />
        <property name="address"><ref bean="beanAddressJussieu" /></property>
    </bean>    
    <bean id="person2" class="domain.Contact" scope="prototype">
        <property name="firstname" value="Allan" />
        <property name="lastname" value="Mottier" />
        <property name="email" value="allan.mottier@gmail.com" />
        <property name="address"><ref bean="beanAddressParis" /></property>
        <property name="phones">
            <list>
                <ref bean="phone1" />
                <ref bean="phone2" />
            </list>
        </property>
        <property name="books">
            <list>
                <ref bean="group1" />
            </list>
        </property>
    </bean>
    
    <!-- AOP -->
    <!-- <aop:config>        
        <aop:aspect ref="beanContact">
            <aop:pointcut id="beanContactToUPPER"
                expression="execution(* Contact.setLastname(..))
                           and args(lastname)" />
            <aop:after pointcut-ref="beanContactToUPPER" method="toupper" arg-names="lastname" />
        </aop:aspect>
    </aop:config>-->
</beans>
